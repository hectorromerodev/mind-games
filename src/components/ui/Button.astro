---
export interface Props {
  variant?: 'primary' | 'secondary' | 'success' | 'warning' | 'danger' | 'neutral' | 'reset' | 'game-option' | 'game-option-correct' | 'game-option-wrong';
  size?: 'sm' | 'md' | 'lg' | 'xl';
  disabled?: boolean;
  id?: string;
  onClick?: string;
  class?: string;
}

const { 
  variant = 'primary', 
  size = 'md', 
  disabled = false, 
  id, 
  onClick,
  class: additionalClass = ''
} = Astro.props;

const baseClasses = 'btn-base';

const variantClasses = {
  primary: 'btn-primary',
  secondary: 'btn-secondary',
  success: 'btn-success',
  warning: 'btn-warning',
  danger: 'btn-danger',
  neutral: 'btn-neutral',
  reset: 'btn-reset',
  'game-option': 'btn-game-option',
  'game-option-correct': 'btn-game-option-correct',
  'game-option-wrong': 'btn-game-option-wrong'
};

const sizeClasses = {
  sm: 'btn-sm',
  md: 'btn-md',
  lg: 'btn-lg',
  xl: 'btn-xl'
};

const buttonClasses = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${additionalClass}`;
---

<button 
  class={buttonClasses}
  disabled={disabled}
  id={id}
  onclick={onClick}
>
  <slot />
</button>

<style>
  button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none !important;
  }
  
  button {
    position: relative;
    overflow: hidden;
  }
  
  button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
    transition: left 0.5s;
  }
  
  button:hover::before {
    left: 100%;
  }
</style>
